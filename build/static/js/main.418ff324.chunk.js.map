{"version":3,"sources":["components/home.js","components/Freelancers.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","image","setImage","name","setName","title","setTitle","description","setDescription","price","setPrice","show","setShow","handleClose","Navbar","bg","Container","Brand","href","Toggle","Nav","className","Badge","cUSDBalance","Collapse","Button","onClick","variant","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","placeholder","as","style","height","Footer","disabled","addFreelancer","Freelancers","newPrice","setNewPrice","hours","setHours","newDescription","setNewDescription","Row","xs","md","freelancers","map","freelancer","Col","Card","Stack","direction","gap","index","noOfJobs","src","alt","objectFit","Text","available","freelancerAddress","walletAddress","toggleAvailable","class","hireFreelancer","changePrice","changeDescription","contractAddress","App","contract","setcontract","address","setAddress","kit","setKit","setcUSDBalance","setFreelancers","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","console","log","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","getFreelancers","methods","getFreelancersLength","call","freelancerLength","_freelancers","Promise","resolve","reject","push","all","_image","_name","_title","_description","_price","newFreelancer","send","from","_index","_newprice","_hours","cUSDContract","IERC","totalPayment","cost","BigNumber","toString","approve","hireFreelancerHourly","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ipJA+IeA,EAlIF,SAACC,GACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAKA,EAAwBV,oBAAS,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,qCACE,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAX,SACE,eAACC,EAAA,EAAD,WACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,oCACA,cAACJ,EAAA,EAAOK,OAAR,IACA,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACE,eAACC,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,qBACWtB,EAAMwB,YADjB,YAIF,cAACT,EAAA,EAAOU,SAAR,CAAiBH,UAAU,sBAA3B,SACE,cAACI,EAAA,EAAD,CAAQC,QAdC,kBAAMd,GAAQ,IAcMe,QAAQ,OAArC,SACE,2DAMR,eAACC,EAAA,EAAD,CAAOjB,KAAMA,EAAMkB,OAAQhB,EAAaiB,UAAQ,EAAhD,UACE,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,+BAEF,cAACC,EAAA,EAAD,UACE,eAACN,EAAA,EAAMO,KAAP,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,QACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,SAAU,SAACC,GACTxC,EAASwC,EAAEC,OAAOC,QAEpBC,YAAY,YAIhB,cAACT,EAAA,EAAD,CACEC,UAAU,YACVC,MAAM,OACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,SAAU,SAACC,GACTtC,EAAQsC,EAAEC,OAAOC,QAEnBC,YAAY,iBAIhB,cAACT,EAAA,EAAD,CACEC,UAAU,aACVC,MAAM,QACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,SAAU,SAACC,GACTpC,EAASoC,EAAEC,OAAOC,QAEpBC,YAAY,yBAKhB,cAACT,EAAA,EAAD,CACEC,UAAU,mBACVC,MAAM,cACNjB,UAAU,OAHZ,SAKE,cAACa,EAAA,EAAKK,QAAN,CACEO,GAAG,WACHD,YAAY,2BACZE,MAAO,CAAEC,OAAQ,QACjBP,SAAU,SAACC,GACTlC,EAAekC,EAAEC,OAAOC,YAM9B,cAACR,EAAA,EAAD,CAAeC,UAAU,aAAaC,MAAM,QAAQjB,UAAU,OAA9D,SACE,cAACa,EAAA,EAAKK,QAAN,CACEC,KAAK,SACLC,SAAU,SAACC,GACThC,EAASgC,EAAEC,OAAOC,QAEpBC,YAAY,gCAKpB,eAACjB,EAAA,EAAMqB,OAAP,WACE,cAACxB,EAAA,EAAD,CAAQE,QAAQ,oBAAoBD,QAASb,EAA7C,mBAGA,cAACY,EAAA,EAAD,CACEE,QAAQ,OACRuB,WA5GiBjD,GAASE,GAAQE,GAASE,GAAeE,GA6G1DiB,QAAS,WACP3B,EAAMoD,cAAclD,EAAOE,EAAME,EAAOE,EAAaE,GACrDI,KALJ,0C,oCC3HGuC,EAAc,SAACrD,GAC1B,MAAgCC,mBAAS,IAAzC,mBAAOqD,EAAP,KAAiBC,EAAjB,KACA,EAA0BtD,mBAAS,IAAnC,mBAAOuD,EAAP,KAAcC,EAAd,KACA,EAA4CxD,mBAAS,IAArD,mBAAOyD,EAAP,KAAuBC,EAAvB,KAEA,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGxC,UAAU,MAA7B,SACGtB,EAAM+D,YAAYC,KAAI,SAACC,GAAD,OACrB,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAM7C,UAAU,QAAhB,UACE,cAAC6C,EAAA,EAAKnC,OAAN,UACE,eAACoC,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAnC,UACE,eAAC/C,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACG2C,EAAWM,MADd,SAIA,eAAChD,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACG2C,EAAWvD,MADd,oBAIA,eAACa,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACG2C,EAAWO,SADd,qBAMJ,qBAAKlD,UAAU,mBAAf,SACE,qBACEmD,IAAKR,EAAW/D,MAChBwE,IAAKT,EAAWzD,YAChBwC,MAAO,CAAE2B,UAAW,aAIxB,eAACR,EAAA,EAAK/B,KAAN,CAAWd,UAAU,kCAArB,UAEA,cAAC6C,EAAA,EAAKjC,MAAN,CAAYZ,UAAU,cAAtB,SACG2C,EAAW7D,OAEZ,cAAC+D,EAAA,EAAKjC,MAAN,CAAYZ,UAAU,cAAtB,SACC2C,EAAW3D,QAGZ,cAAC6D,EAAA,EAAKS,KAAN,CAAWtD,UAAU,cAArB,SACG2C,EAAWzD,cAEd,eAACe,EAAA,EAAD,CAAOP,GAAG,YAAYM,UAAU,UAAhC,UACK2C,EAAWY,UAAY,qBAAuB,gBADnD,IACqEZ,EAAWY,aAK9EZ,EAAWa,oBAAsB9E,EAAM+E,eACzC,wBACMtC,KAAK,SACLd,QAAS,kBAAM3B,EAAMgF,gBAAgBf,EAAWM,QAChDU,MAAM,2BAHZ,SAKOhB,EAAWY,UAAY,uBAAyB,qBAK1DZ,EAAWa,oBAAsB9E,EAAM+E,gBAA0C,IAAzBd,EAAWY,WAChE,+BACE,sBAAKI,MAAM,SAAX,UACE,uBACExC,KAAK,SACLwC,MAAM,oBACNpC,MAAOW,EACPd,SAAU,SAACC,GAAD,OAAOc,EAASd,EAAEC,OAAOC,QACnCC,YAAY,4BAEd,wBACEL,KAAK,SACLd,QAAS,kBAAM3B,EAAMkF,eAAejB,EAAWM,MAAOf,IACtDyB,MAAM,oBAHR,uCAWRhB,EAAWa,oBAAsB9E,EAAM+E,eACnC,+BACE,sBAAKE,MAAM,SAAX,UACE,uBACExC,KAAK,SACLwC,MAAM,oBACNpC,MAAOS,EACPZ,SAAU,SAACC,GAAD,OAAOY,EAAYZ,EAAEC,OAAOC,QACtCC,YAAY,oBAGd,wBACEL,KAAK,SACLd,QAAS,kBAAM3B,EAAMmF,YAAYlB,EAAWM,MAAOjB,IACnD2B,MAAM,oBAHR,qCAWJhB,EAAWa,oBAAsB9E,EAAM+E,eACvC,+BACE,sBAAKE,MAAM,SAAX,UACE,uBACExC,KAAK,OACLwC,MAAM,oBACNpC,MAAOa,EACPhB,SAAU,SAACC,GAAD,OAAOgB,EAAkBhB,EAAEC,OAAOC,QAC5CC,YAAY,0BAGd,wBACEL,KAAK,SACLd,QAAS,kBAAM3B,EAAMoF,kBAAkBnB,EAAWM,MAAOb,IACzDuB,MAAM,oBAHR,4CA7GAhB,EAAWM,a,8DCAvBc,EAAkB,6CAuKTC,MApKf,WACE,MAAgCrF,mBAAS,MAAzC,mBAAOsF,EAAP,KAAiBC,EAAjB,KACA,EAA8BvF,mBAAS,MAAvC,mBAAOwF,EAAP,KAAgBC,EAAhB,KACA,EAAsBzF,mBAAS,MAA/B,mBAAO0F,EAAP,KAAYC,EAAZ,KACA,EAAsC3F,mBAAS,GAA/C,mBAAOuB,EAAP,KAAoBqE,EAApB,KACA,EAAsC5F,mBAAS,IAA/C,mBAAO8D,EAAP,KAAoB+B,EAApB,KAEMC,EAAe,uCAAG,kCAAAC,EAAA,0DAClBC,OAAOC,KADW,0CAGZD,OAAOC,KAAKC,SAHA,cAIZC,EAAO,IAAIC,IAAKJ,OAAOC,MACzBP,EAAMW,yBAAeF,GALP,SAOKT,EAAIS,KAAKG,IAAIC,cAPlB,cAOZC,EAPY,OAQZC,EAAeD,EAAS,GAC9Bd,EAAIgB,eAAiBD,EATH,UAWZhB,EAAWgB,GAXC,yBAYZd,EAAOD,GAZK,0DAclBiB,QAAQC,IAAR,MAdkB,gCAiBpBC,MAAM,kBAjBc,0DAAH,qDAqBfC,EAAaC,sBAAW,sBAAC,gCAAAhB,EAAA,+EAELL,EAAIsB,gBAAgBxB,GAFf,OAErByB,EAFqB,OAGrBC,EAAaD,EAAQE,KAAKC,WAnCf,IAmC0CC,QAAQ,GAE7D/B,EAAW,IAAII,EAAIS,KAAKG,IAAIgB,SAAStD,EAAYoB,GACvDG,EAAYD,GACZM,EAAesB,GAPY,kDAS3BP,QAAQC,IAAR,MAT2B,0DAW5B,CAACpB,EAASE,IAEP6B,EAAiBR,sBAAW,sBAAC,oCAAAhB,EAAA,sEACFT,EAASkC,QAAQC,uBAAuBC,OADtC,OAGjC,IAFMC,EAD2B,OAE3B7D,EAAc,GAFa,WAGxBQ,GACP,IAAIsD,EAAe,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAhC,EAAA,sEACNT,EAASkC,QAAQD,eAAejD,GAAOoD,OADjC,OACzB1D,EADyB,OAG7B8D,EAAQ,CACNxD,MAAOA,EACPO,kBAAmBb,EAAW,GAC9B/D,MAAO+D,EAAW,GAClB7D,KAAM6D,EAAW,GACjB3D,MAAO2D,EAAW,GAClBzD,YAAayD,EAAW,GACxBvD,MAAOuD,EAAW,GAClBO,SAAUP,EAAW,GACrBY,UAAWZ,EAAW,KAZK,2CAAZ,yDAenBF,EAAYkE,KAAKJ,IAhBVtD,EAAQ,EAAGA,EAAQqD,EAAkBrD,IAAU,EAA/CA,GAHwB,gBAsBNuD,QAAQI,IAAInE,GAtBN,OAsB3B8D,EAtB2B,OAuBjC/B,EAAe+B,GAvBkB,4CAwBhC,CAACtC,IAEEnC,EAAa,uCAAG,WAAO+E,EAAQC,EAAOC,EAAQC,EAAcC,GAA5C,SAAAvC,EAAA,+EAEZT,EAASkC,QACZe,cAAcL,EAAQC,EAAOC,EAAQC,EAAcC,GACnDE,KAAK,CAAEC,KAAMjD,IAJE,OAKlB+B,IALkB,+CAOlBV,MAAM,EAAD,IAPa,wDAAH,8DAWb1B,EAAiB,uCAAG,WAAOuD,EAAQL,GAAf,SAAAtC,EAAA,+EAEhBT,EAASkC,QACZrC,kBAAkBuD,EAAQL,GAC1BG,KAAK,CAAEC,KAAMjD,IAJM,OAKtB+B,IALsB,+CAOtBV,MAAM,EAAD,IAPiB,wDAAH,wDAWjB3B,EAAW,uCAAG,WAAOwD,EAAQC,GAAf,SAAA5C,EAAA,+EAEVT,EAASkC,QACZtC,YAAYwD,EAAQC,GACpBH,KAAK,CAAEC,KAAMjD,IAJA,OAKhB+B,IALgB,+CAOhBV,MAAM,EAAD,IAPW,wDAAH,wDAWX9B,EAAe,uCAAG,WAAO2D,GAAP,SAAA3C,EAAA,+EAEdT,EAASkC,QACZzC,gBAAgB2D,GAChBF,KAAK,CAAEC,KAAMjD,IAJI,OAKpB+B,IALoB,+CAOpBV,MAAM,EAAD,IAPe,wDAAH,sDAWf5B,EAAc,uCAAG,WAAOyD,EAAQE,GAAf,mBAAA7C,EAAA,sEAEb8C,EAAe,IAAInD,EAAIS,KAAKG,IAAIgB,SAASwB,EAnHzB,8CAoHhBC,EAAeH,EAAS9E,EAAY4E,GAAQjI,MAC5CuI,EAAO,IAAIC,IAAUF,GAClB3B,UAxHQ,IAyHR8B,WACTvC,QAAQC,IAAImC,GAPO,SAQbF,EAAarB,QAChB2B,QAAQ/D,EAAiB4D,GACzBR,KAAK,CAAEC,KAAMjD,IAVG,uBAWbF,EAASkC,QACZ4B,qBAAqBV,EAAQE,EAAQI,GACrCR,KAAK,CAAEC,KAAMjD,IAbG,OAcnB+B,IACAT,IACAD,MAAM,gDAhBa,kDAkBnBA,MAAM,EAAD,IAlBc,0DAAH,wDAsCpB,OAhBAwC,qBAAU,WACRvD,MACC,IAEHuD,qBAAU,WACJ3D,GAAOF,GACTsB,MAED,CAACpB,EAAKF,EAASsB,IAElBuC,qBAAU,WACJ/D,GACFiC,MAED,CAACjC,EAAUiC,IAGZ,sBAAKlG,UAAU,MAAf,UACE,cAAC,EAAD,CAAME,YAAaA,EAAa4B,cAAeA,IAC/C,cAAC,EAAD,CACEW,YAAaA,EACbmB,eAAgBA,EAChBE,kBAAmBA,EACnBD,YAAaA,EACbJ,cAAeU,EACfT,gBAAiBA,QCjKVuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.418ff324.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FloatingLabel,\r\n  Nav,\r\n  Badge,\r\n  Container,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n\r\n\r\n  const isFormFilled = () => image && name && title && description && price;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">FreeLancer Marketplace</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Nav className=\"me-auto\">\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              Balance {props.cUSDBalance}cUSD\r\n            </Badge>\r\n          </Nav>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={handleShow} variant=\"dark\">\r\n              <h5> New freelancer </h5>\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Freelancer</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputImage\"\r\n              label=\"Image\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n                placeholder=\"Image\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputName\"\r\n              label=\"name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"Enter name\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputTitle\"\r\n              label=\"title\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"Enter Career title\"\r\n              />\r\n            </FloatingLabel>\r\n            \r\n\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter carrer description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n\r\n            <FloatingLabel controlId=\"inputPrice\" label=\"price\" className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n                placeholder=\"Enter price per hour\"\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              props.addFreelancer(image, name, title, description, price);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Add new freelancer\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Card, Badge, Col, Stack, Row } from \"react-bootstrap\";\r\n\r\nexport const Freelancers = (props) => {\r\n  const [newPrice, setNewPrice] = useState(\"\");\r\n  const [hours, setHours] = useState(\"\");\r\n  const [newDescription, setNewDescription] = useState(\"\");\r\n\r\n  return (\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n      {props.freelancers.map((freelancer) => (\r\n        <Col key={freelancer.index}>\r\n          <Card className=\"h-100\">\r\n            <Card.Header>\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {freelancer.index} ID\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {freelancer.price} cUSD per hour\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {freelancer.noOfJobs} Jobs Done\r\n                </Badge>\r\n              </Stack>\r\n            </Card.Header>\r\n\r\n            <div className=\" ratio ratio-4x3\">\r\n              <img\r\n                src={freelancer.image}\r\n                alt={freelancer.description}\r\n                style={{ objectFit: \"cover\" }}\r\n              />\r\n            </div>\r\n\r\n            <Card.Body className=\"d-flex  flex-column text-center\">\r\n\r\n            <Card.Title className=\"flex-grow-1\">\r\n              {freelancer.name}\r\n              </Card.Title>\r\n              <Card.Title className=\"flex-grow-1\">\r\n              {freelancer.title}\r\n              </Card.Title>\r\n\r\n              <Card.Text className=\"flex-grow-1\">\r\n                {freelancer.description}\r\n              </Card.Text>\r\n              <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {freelancer.available ? \"Available for Hire\" : \"Not Available\"} {freelancer.available}\r\n                </Badge>\r\n\r\n\r\n\r\n              { freelancer.freelancerAddress === props.walletAddress && (\r\n              <button\r\n                    type=\"button\"\r\n                    onClick={() => props.toggleAvailable(freelancer.index)}\r\n                    class=\"btn btn-dark btn-sm mt-1\"\r\n                  >\r\n                    {freelancer.available ? \"Set to Not Available\" : \"Set to Available\"}\r\n                  </button>\r\n              )}\r\n           \r\n\r\n         { freelancer.freelancerAddress !== props.walletAddress && freelancer.available === true && (\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control mt-3\"\r\n                    value={hours}\r\n                    onChange={(e) => setHours(e.target.value)}\r\n                    placeholder=\"enter duration in hours\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.hireFreelancer(freelancer.index, hours)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Hire this freelancer\r\n                  </button>\r\n                </div>\r\n              </form>\r\n             )}\r\n\r\n        { freelancer.freelancerAddress === props.walletAddress && (\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control mt-3\"\r\n                    value={newPrice}\r\n                    onChange={(e) => setNewPrice(e.target.value)}\r\n                    placeholder=\"enter new price\"\r\n                  />\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.changePrice(freelancer.index, newPrice)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Update Hourly Rate\r\n                  </button>\r\n                </div>\r\n              </form>\r\n             )}\r\n\r\n            { freelancer.freelancerAddress === props.walletAddress && (\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control mt-3\"\r\n                    value={newDescription}\r\n                    onChange={(e) => setNewDescription(e.target.value)}\r\n                    placeholder=\"enter new description\"\r\n                  />\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.changeDescription(freelancer.index, newDescription)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Change Description\r\n                  </button>\r\n                </div>\r\n              </form>\r\n             )}\r\n\r\n             \r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Home from \"./components/home\";\r\nimport { Freelancers } from \"./components/Freelancers\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport freelancer from \"./contracts/freelancer.abi.json\";\r\nimport IERC from \"./contracts/IERC.abi.json\";\r\n\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst contractAddress = \"0xA371b0718b07026D87F2606295562e86Fa3Dd364\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nfunction App() {\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [freelancers, setFreelancers] = useState([]);\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Error Occurred\");\r\n    }\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n\r\n      const contract = new kit.web3.eth.Contract(freelancer, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [address, kit]);\r\n\r\n  const getFreelancers = useCallback(async () => {\r\n    const freelancerLength = await contract.methods.getFreelancersLength().call();\r\n    const freelancers = [];\r\n    for (let index = 0; index < freelancerLength; index++) {\r\n      let _freelancers = new Promise(async (resolve, reject) => {\r\n        let freelancer = await contract.methods.getFreelancers(index).call();\r\n\r\n        resolve({\r\n          index: index,\r\n          freelancerAddress: freelancer[0],\r\n          image: freelancer[1],\r\n          name: freelancer[2],\r\n          title: freelancer[3],\r\n          description: freelancer[4],\r\n          price: freelancer[5],\r\n          noOfJobs: freelancer[6],\r\n          available: freelancer[7],\r\n        });\r\n      });\r\n      freelancers.push(_freelancers);\r\n    }\r\n\r\n    const _freelancers = await Promise.all(freelancers);\r\n    setFreelancers(_freelancers);\r\n  }, [contract]);\r\n\r\n  const addFreelancer = async (_image, _name, _title, _description, _price) => {\r\n    try {\r\n      await contract.methods\r\n        .newFreelancer(_image, _name, _title, _description, _price)\r\n        .send({ from: address });\r\n      getFreelancers();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const changeDescription = async (_index, _description) => {\r\n    try {\r\n      await contract.methods\r\n        .changeDescription(_index, _description)\r\n        .send({ from: address });\r\n      getFreelancers();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const changePrice = async (_index, _newprice) => {\r\n    try {\r\n      await contract.methods\r\n        .changePrice(_index, _newprice)\r\n        .send({ from: address });\r\n      getFreelancers();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const toggleAvailable = async (_index) => {\r\n    try {\r\n      await contract.methods\r\n        .toggleAvailable(_index)\r\n        .send({ from: address });\r\n      getFreelancers();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const hireFreelancer = async (_index, _hours) => {\r\n    try {\r\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\r\n      const totalPayment = _hours * freelancers[_index].price;\r\n      const cost = new BigNumber(totalPayment)\r\n              .shiftedBy(ERC20_DECIMALS)\r\n              .toString();\r\n      console.log(totalPayment);\r\n      await cUSDContract.methods\r\n        .approve(contractAddress, cost)\r\n        .send({ from: address });\r\n      await contract.methods\r\n        .hireFreelancerHourly(_index, _hours, cost)\r\n        .send({ from: address });\r\n      getFreelancers();\r\n      getBalance();\r\n      alert(\"you have successfully sent cusd to this user\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectToWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && address) {\r\n      getBalance();\r\n    }\r\n  }, [kit, address, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (contract) {\r\n      getFreelancers();\r\n    }\r\n  }, [contract, getFreelancers]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home cUSDBalance={cUSDBalance} addFreelancer={addFreelancer} />\r\n      <Freelancers\r\n        freelancers={freelancers}\r\n        hireFreelancer={hireFreelancer}\r\n        changeDescription={changeDescription}\r\n        changePrice={changePrice}\r\n        walletAddress={address}\r\n        toggleAvailable={toggleAvailable}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}